export enum HttpStatusCode {
  Continue = 100 /* 继续。服务器已收到请求的起始部分，客户端应继续发送剩余部分。 */,
  SwitchingProtocols = 101 /* 切换协议。服务器已理解客户端的请求，将通过协议切换的方式来满足请求。 */,
  Processing = 102 /* 处理中。服务器正在处理请求，但尚未完成处理过程。 */,

  OK = 200 /* 请求成功。请求已成功处理。 */,
  Created = 201 /* 已创建。请求已经被实现，而且有一个新的资源已经依据请求的需要而建立。 */,
  Accepted = 202 /* 已接受。服务器接受了请求，但尚未对其进行处理。 */,
  NoContent = 204 /* 无内容。服务器接受了请求，但没有返回任何内容。 */,

  MultipleChoices = 300 /* 多种选择。请求的资源有多种表示形式，服务器根据请求者的首选项进行选择。 */,
  MovedPermanently = 301 /* 永久移动。请求的资源已被永久移动到新位置。 */,
  Found = 302 /* 找到。请求的资源临时从不同的 URI 响应请求。 */,
  NotModified = 304 /* 未修改。自从上次请求后，请求的资源未被修改。 */,

  BadRequest = 400 /* 错误的请求。服务器无法理解请求的语法。 */,
  Unauthorized = 401 /* 未授权。请求要求身份验证。客户端没有提供有效的身份验证凭据。 */,
  Forbidden = 403 /* 禁止访问。服务器拒绝请求。 */,
  NotFound = 404 /* 未找到。服务器找不到请求的资源。 */,
  MethodNotAllowed = 405 /* 不允许的方法。请求的方法不被允许。 */,
  RequestTimeout = 408 /* 请求超时。服务器等候请求时发生超时。 */,

  InternalServerError = 500 /* 服务器内部错误。服务器遇到了不可预知的情况，无法完成请求。 */,
  BadGateway = 502 /* 错误的网关。服务器作为网关或代理，从上游服务器收到无效响应。 */,
  ServiceUnavailable = 503 /* 服务不可用。服务器当前无法处理请求，可能是由于过载或停机维护。 */,
  GatewayTimeout = 504 /* 网关超时。服务器作为网关或代理，但是没有及时从上游服务器接收到请求。 */,
}

export enum HttpMethod {
  GET = "get" /* 获取资源，不对服务器数据进行修改 */,
  POST = "post" /* 向服务器提交数据 */,
  PUT = "put" /* 替换服务器上的资源 */,
  DELETE = "delete" /* 删除服务器上的资源 */,
  HEAD = "head" /* 获取资源的头部信息 */,
  OPTIONS = "options" /* 获取服务器支持的请求方法 */,
  PATCH = "patch" /* 对服务器上的资源进行局部修改 */,
  TRACE = "trace" /* 追踪请求的路径 */,
}

export enum HttpContentType {
  Json = "application/json" /* 表示请求或响应中的数据是 JSON 格式的 */,

  FormData = "multipart/form-data" /* 表示请求中的数据是通过多部分 MIME 编码的表单数据 */,
  OctetStream = "application/octet-stream" /* 表示请求或响应中的数据是二进制流 */,

  HTML = "text/html" /* 表示请求或响应中的数据是 HTML 格式的 */,
  TextXml = "text/xml" /* 表示 XML 内容类型 */,
  PlainText = "text/plain" /* 表示请求或响应中的数据是纯文本 */,
  XML = "application/xml" /* 表示请求或响应中的数据是 XML 格式的 */,
  ImageJpeg = "image/jpeg" /* 表示 JPEG 图片内容类型 */,
  ImagePng = "image/png" /* 表示 PNG 图片内容类型 */,
  ApplicationPdf = "application/pdf" /* 表示 PDF 内容类型 */,
  ImageGif = "image/gif" /* 表示 GIF 图片内容类型 */,
  VideoMp4 = "video/mp4" /* 表示 MP4 视频内容类型 */,
  AudioMp3 = "audio/mp3" /* 表示 MP3 音频内容类型 */,
  ApplicationZip = "application/zip" /* 表示 ZIP 压缩文件内容类型 */,
  ApplicationJavascript = "application/javascript" /* 表示 JavaScript 内容类型 */,
  TextCsv = "text/csv" /* 表示 CSV 内容类型 */,
  ApplicationXlsx = "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet" /* 表示 Excel 文件内容类型 */,
  ImageSvgXml = "image/svg+xml" /* 表示 SVG 图片内容类型 */,
  ApplicationRssXml = "application/rss+xml" /* 表示 RSS XML 内容类型 */,
  ApplicationAtomXml = "application/atom+xml" /* 表示 Atom XML 内容类型 */,
  TextCss = "text/css" /* 表示 CSS 内容类型 */,
  ApplicationGzip = "application/gzip" /* 表示 GZIP 压缩文件内容类型 */,
  ApplicationTar = "application/tar" /* 表示 TAR 压缩文件内容类型 */,
  ApplicationRtf = "application/rtf" /* 表示 RTF 内容类型 */,
  ApplicationDoc = "application/msword" /* 表示 Word 文档内容类型 */,
  ApplicationXmlDtd = "application/xml-dtd" /* 表示 XML DTD 内容类型 */,
  ApplicationSoapXml = "application/soap+xml" /* 表示 SOAP XML 内容类型 */,
  ApplicationSql = "application/sql" /* 表示 SQL 内容类型 */,
  ApplicationJsonPatch = "application/json-patch+json" /* 表示 JSON Patch 内容类型 */,
  ApplicationHalJson = "application/hal+json" /* 表示 HAL JSON 内容类型 */,
  ApplicationOgg = "application/ogg" /* 表示 OGG 内容类型 */,
  ApplicationRdfXml = "application/rdf+xml" /* 表示 RDF XML 内容类型 */,
  ApplicationWasm = "application/wasm" /* 表示 WebAssembly 内容类型 */,
  ApplicationXhtmlXml = "application/xhtml+xml" /* 表示 XHTML XML 内容类型 */,
  ApplicationYaml = "application/x-yaml" /* 表示 YAML 内容类型 */,
  ApplicationLdJson = "application/ld+json" /* 表示 Linked Data JSON 内容类型 */,
  ApplicationMpegUrl = "application/x-mpegURL" /* 表示 MPEG URL 内容类型 */,
  ApplicationXFontWoff = "application/x-font-woff" /* 表示 WOFF 字体内容类型 */,
  ApplicationXFontWoff2 = "application/x-font-woff2" /* 表示 WOFF2 字体内容类型 */,
  ApplicationXFontTtf = "application/x-font-ttf" /* 表示 TTF 字体内容类型 */,
  ApplicationXFontOtf = "application/x-font-otf" /* 表示 OTF 字体内容类型 */,
  ApplicationIcalendar = "application/ics" /* 表示 iCalendar 内容类型 */,
  ApplicationEpubZip = "application/epub+zip" /* 表示 EPUB 压缩文件内容类型 */,
  ApplicationXShockwaveFlash = "application/x-shockwave-flash" /* 表示 Flash 动画内容类型 */,
  ApplicationVndMsExcel = "application/vnd.ms-excel" /* 表示旧版 Excel 文件内容类型 */,
  ApplicationVndMsPowerpoint = "application/vnd.ms-powerpoint" /* 表示旧版 PowerPoint 文件内容类型 */,
  ApplicationVndMsFontobject = "application/vnd.ms-fontobject" /* 表示旧版字体内容类型 */,
  ApplicationVndMsCabCompressed = "application/vnd.ms-cab-compressed" /* 表示旧版 CAB 压缩文件内容类型 */,
  ApplicationVndMsAccess = "application/vnd.ms-access" /* 表示旧版 Access 数据库内容类型 */,
  ApplicationVndMsProject = "application/vnd.ms-project" /* 表示旧版 Project 文件内容类型 */,
  ApplicationVndMsPublisher = "application/vnd.ms-publisher" /* 表示旧版 Publisher 文件内容类型 */,
  ApplicationVndMsOutlook = "application/vnd.ms-outlook" /* 表示旧版 Outlook 文件内容类型 */,
  ApplicationVndMsWordDocumentMacroenabled12 = "application/vnd.ms-word.document.macroEnabled.12" /* 表示启用宏的 Word 文档内容类型 */,
  ApplicationVndMsWordTemplateMacroenabled12 = "application/vnd.ms-word.template.macroEnabled.12" /* 表示启用宏的 Word 模板内容类型 */,
  ApplicationVndMsExcelMacroenabled12 = "application/vnd.ms-excel.sheet.macroEnabled.12" /* 表示启用宏的 Excel 文件内容类型 */,
  ApplicationVndMsExcelTemplateMacroenabled12 = "application/vnd.ms-excel.template.macroEnabled.12" /* 表示启用宏的 Excel 模板内容类型 */,
  ApplicationVndMsPowerpointMacroenabled12 = "application/vnd.ms-powerpoint.presentation.macroEnabled.12" /* 表示启用宏的 PowerPoint 文件内容类型 */,
  ApplicationVndMsPowerpointTemplateMacroenabled12 = "application/vnd.ms-powerpoint.template.macroEnabled.12" /* 表示启用宏的 PowerPoint 模板内容类型 */,
  ApplicationVndMsPowerpointSlideshowMacroenabled12 = "application/vnd.ms-powerpoint.slideshow.macroEnabled.12" /* 表示启用宏的 PowerPoint 幻灯片内容类型 */,
  ApplicationVndMsExcelAddinMacroenabled12 = "application/vnd.ms-excel.addin.macroEnabled.12" /* 表示启用宏的 Excel 加载项内容类型 */,
  ApplicationVndMsPowerpointAddinMacroenabled12 = "application/vnd.ms-powerpoint.addin.macroEnabled.12" /* 表示启用宏的 PowerPoint 加载项内容类型 */,
  ApplicationVndMsWordLegacyDoc = "application/vnd.ms-word.legacy.doc" /* 表示旧版 Word 文档内容类型 */,
  ApplicationVndMsExcelLegacyXls = "application/vnd.ms-excel.legacy.xls" /* 表示旧版 Excel 文件内容类型 */,
  ApplicationVndMsPowerpointLegacyPpt = "application/vnd.ms-powerpoint.legacy.ppt" /* 表示旧版 PowerPoint 文件内容类型 */,
  ApplicationVndMsWordLegacyDot = "application/vnd.ms-word.legacy.dot" /* 表示旧版 Word 模板内容类型 */,
  ApplicationVndMsExcelLegacyXlt = "application/vnd.ms-excel.legacy.xlt" /* 表示旧版 Excel 模板内容类型 */,
  ApplicationVndMsPowerpointLegacyPot = "application/vnd.ms-powerpoint.legacy.pot" /* 表示旧版 PowerPoint 模板内容类型 */,
  AudioMpeg = "audio/mpeg" /* 表示 MPEG 音频内容类型 */,
  AudioOgg = "audio/ogg" /* 表示 OGG 音频内容类型 */,
  AudioWav = "audio/wav" /* 表示 WAV 音频内容类型 */,
  AudioWebm = "audio/webm" /* 表示 WEBM 音频内容类型 */,
  VideoMpeg = "video/mpeg" /* 表示 MPEG 视频内容类型 */,
  VideoOgg = "video/ogg" /* 表示 OGG 视频内容类型 */,
  VideoWebm = "video/webm" /* 表示 WEBM 视频内容类型 */,
  VideoQuicktime = "video/quicktime" /* 表示 QuickTime 视频内容类型 */,
  VideoXmsvideo = "video/x-msvideo" /* 表示 AVI 视频内容类型 */,
  Video3gpp = "video/3gpp" /* 表示 3GPP 视频内容类型 */,
  Video3gpp2 = "video/3gpp2" /* 表示 3GPP2 视频内容类型 */,
  VideoXflv = "video/x-flv" /* 表示 FLV 视频内容类型 */,
  VideoXmatroska = "video/x-matroska" /* 表示 Matroska 视频内容类型 */,
  VideoVndMpegurl = "video/vnd.mpegURL" /* 表示 MPEG URL 视频内容类型 */,
  VideoVndMsAsf = "video/vnd.ms-asf" /* 表示 ASF 视频内容类型 */,
  VideoVndMsAvi = "video/vnd.avi" /* 表示 AVI 视频内容类型 */,
  VideoVndMsWm = "video/vnd.ms-wm" /* 表示 WM 视频内容类型 */,
  VideoVndMsWmv = "video/vnd.ms-wmv" /* 表示 WMV 视频内容类型 */,
  VideoVndMsWmx = "video/vnd.ms-wmx" /* 表示 WMX 视频内容类型 */,
  VideoVndMsWvx = "video/vnd.ms-wvx" /* 表示 WVX 视频内容类型 */,
  VideoVndMsvideo = "video/vnd.msvideo" /* 表示 MSVIDEO 视频内容类型 */,
  VideoVndDlnaMpegTts = "video/vnd.dlna.mpeg-tts" /* 表示 DLNA MPEG TTS 视频内容类型 */,
}

export enum HttpParamsType {
  Body = "body" /* 请求体参数，通常用于传递复杂的数据，比如 JSON  */,
  Path = "path" /* 路径参数，一般用于标识请求的资源路径，比如在 RESTful API 中的 URL 路径部分 */,
  Query = "query" /* 查询参数，一般用于附加在 URL 路径后面的键值对形式的参数 */,
  Header = "header" /* 参数挂在请求头里 */,
  Cookie = "cookie" /* 参数挂在 Cookie 里 */,
}
